{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/freebs/projects/jf-next-ts/pages/blog/blog_post.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport { client } from \"../prismic-configuration\";\nimport Link from \"next/link\";\n\nvar Post = function Post(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"back to blog list\")), RichText.render(props.post.data.title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, Date(props.post.data.date).toString()), RichText.render(props.post.data.post_body));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var uid, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          uid = context.query.uid;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.getByUID(\"blog_post\", uid));\n\n        case 3:\n          post = _context.sent;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/freebs/projects/jf-next-ts/pages/blog/blog_post.js"],"names":["React","RichText","Date","client","Link","Post","props","render","post","data","title","date","toString","post_body","getInitialProps","context","uid","query","getByUID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIGL,QAAQ,CAACM,MAAT,CAAgBD,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,KAAhC,CAJH,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,IAAI,CAACI,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBE,IAAjB,CAAJ,CAA2BC,QAA3B,EAAP,CALF,EAMGX,QAAQ,CAACM,MAAT,CAAgBD,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBI,SAAhC,CANH,CADgB;AAAA,CAAlB;;AAWAR,IAAI,CAACS,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GADa,GACLD,OAAO,CAACE,KADH,CACbD,GADa;AAAA;AAAA,2CAEFb,MAAM,CAACe,QAAP,CAAgB,WAAhB,EAA6BF,GAA7B,CAFE;;AAAA;AAEfR,UAAAA,IAFe;AAAA,2CAId;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport { client } from \"../prismic-configuration\";\nimport Link from \"next/link\";\n\nconst Post = props => (\n  <div>\n    <Link href=\"/\">\n      <a>back to blog list</a>\n    </Link>\n    {RichText.render(props.post.data.title)}\n    <span>{Date(props.post.data.date).toString()}</span>\n    {RichText.render(props.post.data.post_body)}\n  </div>\n);\n\nPost.getInitialProps = async context => {\n  const { uid } = context.query;\n  const post = await client.getByUID(\"blog_post\", uid);\n\n  return { post };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}