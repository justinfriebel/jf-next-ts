{"ast":null,"code":"var _jsxFileName = \"/Users/freebs/projects/jf-next-ts/pages/blog/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Prismic from \"prismic-javascript\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport { client, linkResolver, hrefResolver } from \"../../prismic-configuration\";\nimport Link from \"next/link\";\n\nconst BlogHome = props => {\n  const {\n    data\n  } = props.home;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, RichText.asText(data.headline)), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, RichText.asText(data.description)), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.posts.results.map(post => __jsx(\"li\", {\n    key: post.uid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"- \", RichText.render(post.data.title), __jsx(Link, {\n    href: hrefResolver(post),\n    as: linkResolver(post),\n    passHref: true,\n    prefetch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, RichText.render(post.data.title))), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Date(post.data.date).toString())))));\n};\n\nBlogHome.getInitialProps = async context => {\n  const home = await client.getSingle(\"blog_home\");\n  const posts = await client.query(Prismic.Predicates.at(\"document.type\", \"blog_post\"), {\n    orderings: \"[my.blog_post.date desc]\"\n  });\n  return {\n    home,\n    posts\n  };\n};\n\nexport default BlogHome;","map":{"version":3,"sources":["/Users/freebs/projects/jf-next-ts/pages/blog/index.js"],"names":["React","Prismic","RichText","Date","client","linkResolver","hrefResolver","Link","BlogHome","props","data","home","asText","headline","description","posts","results","map","post","uid","render","title","date","toString","getInitialProps","context","getSingle","query","Predicates","at","orderings"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SACEC,MADF,EAEEC,YAFF,EAGEC,YAHF,QAIO,6BAJP;AAKA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAK,CAACE,IAAvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,QAAQ,CAACU,MAAT,CAAgBF,IAAI,CAACG,QAArB,CAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,QAAQ,CAACU,MAAT,CAAgBF,IAAI,CAACI,WAArB,CAAJ,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,KAAN,CAAYC,OAAZ,CAAoBC,GAApB,CAAwBC,IAAI,IAC3B;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKjB,QAAQ,CAACkB,MAAT,CAAgBF,IAAI,CAACR,IAAL,CAAUW,KAA1B,CADL,EAEE,MAAC,IAAD;AACE,IAAA,IAAI,EAAEf,YAAY,CAACY,IAAD,CADpB;AAEE,IAAA,EAAE,EAAEb,YAAY,CAACa,IAAD,CAFlB;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,QAAQ,CAACkB,MAAT,CAAgBF,IAAI,CAACR,IAAL,CAAUW,KAA1B,CAAJ,CANF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOlB,IAAI,CAACe,IAAI,CAACR,IAAL,CAAUY,IAAX,CAAJ,CAAqBC,QAArB,EAAP,CAVF,CADD,CADH,CALF,CADF;AAwBD,CA3BD;;AA6BAf,QAAQ,CAACgB,eAAT,GAA2B,MAAMC,OAAN,IAAiB;AAC1C,QAAMd,IAAI,GAAG,MAAMP,MAAM,CAACsB,SAAP,CAAiB,WAAjB,CAAnB;AAEA,QAAMX,KAAK,GAAG,MAAMX,MAAM,CAACuB,KAAP,CAClB1B,OAAO,CAAC2B,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CADkB,EAElB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAFkB,CAApB;AAKA,SAAO;AAAEnB,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAP;AACD,CATD;;AAWA,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport Prismic from \"prismic-javascript\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport {\n  client,\n  linkResolver,\n  hrefResolver\n} from \"../../prismic-configuration\";\nimport Link from \"next/link\";\n\nconst BlogHome = props => {\n  const { data } = props.home;\n\n  return (\n    <div>\n      {/* <img src={props.home.data.image.url} alt=\"avatar image\" /> */}\n      <h1>{RichText.asText(data.headline)}</h1>\n      <p>{RichText.asText(data.description)}</p>\n\n      <ul>\n        {props.posts.results.map(post => (\n          <li key={post.uid}>\n            - {RichText.render(post.data.title)}\n            <Link\n              href={hrefResolver(post)}\n              as={linkResolver(post)}\n              passHref\n              prefetch\n            >\n              <a>{RichText.render(post.data.title)}</a>\n            </Link>\n            <span>{Date(post.data.date).toString()}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nBlogHome.getInitialProps = async context => {\n  const home = await client.getSingle(\"blog_home\");\n\n  const posts = await client.query(\n    Prismic.Predicates.at(\"document.type\", \"blog_post\"),\n    { orderings: \"[my.blog_post.date desc]\" }\n  );\n\n  return { home, posts };\n};\n\nexport default BlogHome;\n"]},"metadata":{},"sourceType":"module"}