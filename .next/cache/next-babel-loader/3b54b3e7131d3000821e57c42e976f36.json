{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/freebs/projects/jf-next-ts/pages/blog/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Prismic from \"prismic-javascript\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport { client } from \"../../prismic-configuration\";\n\nvar BlogHome = function BlogHome(props) {\n  var data = props.home.data;\n  console.log(props.data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, RichText.asText(data.headline)), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, RichText.asText(data.description)), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.posts.results.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, RichText.render(post.data.title));\n  })));\n};\n\nBlogHome.getInitialProps = function _callee(context) {\n  var home, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.getSingle(\"blog_home\"));\n\n        case 2:\n          home = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(client.query(Prismic.Predicates.at(\"document.type\", \"blog_posts\"), {\n            orderings: \"[my.blog_post.date desc]\"\n          }));\n\n        case 5:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            home: home,\n            posts: posts\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BlogHome;","map":{"version":3,"sources":["/Users/freebs/projects/jf-next-ts/pages/blog/index.js"],"names":["React","Prismic","RichText","Date","client","BlogHome","props","data","home","console","log","asText","headline","description","posts","results","map","post","uid","render","title","getInitialProps","context","getSingle","query","Predicates","at","orderings"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SAASC,MAAT,QAAuB,6BAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,MAChBC,IADgB,GACPD,KAAK,CAACE,IADC,CAChBD,IADgB;AAExBE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,IAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,QAAQ,CAACS,MAAT,CAAgBJ,IAAI,CAACK,QAArB,CAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,QAAQ,CAACS,MAAT,CAAgBJ,IAAI,CAACM,WAArB,CAAJ,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACQ,KAAN,CAAYC,OAAZ,CAAoBC,GAApB,CAAwB,UAAAC,IAAI;AAAA,WAC3B;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBhB,QAAQ,CAACiB,MAAT,CAAgBF,IAAI,CAACV,IAAL,CAAUa,KAA1B,CAApB,CAD2B;AAAA,GAA5B,CADH,CALF,CADF;AAaD,CAjBD;;AAmBAf,QAAQ,CAACgB,eAAT,GAA2B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNlB,MAAM,CAACmB,SAAP,CAAiB,WAAjB,CADM;;AAAA;AACnBf,UAAAA,IADmB;AAAA;AAAA,2CAGLJ,MAAM,CAACoB,KAAP,CAClBvB,OAAO,CAACwB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,YAAvC,CADkB,EAElB;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAFkB,CAHK;;AAAA;AAGnBb,UAAAA,KAHmB;AAAA,2CAQlB;AAAEN,YAAAA,IAAI,EAAJA,IAAF;AAAQM,YAAAA,KAAK,EAALA;AAAR,WARkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAeT,QAAf","sourcesContent":["import React from \"react\";\nimport Prismic from \"prismic-javascript\";\nimport { RichText, Date } from \"prismic-reactjs\";\nimport { client } from \"../../prismic-configuration\";\n\nconst BlogHome = props => {\n  const { data } = props.home;\n  console.log(props.data);\n\n  return (\n    <div>\n      {/* <img src={props.home.data.image.url} alt=\"avatar image\" /> */}\n      <h1>{RichText.asText(data.headline)}</h1>\n      <p>{RichText.asText(data.description)}</p>\n\n      <ul>\n        {props.posts.results.map(post => (\n          <li key={post.uid}>{RichText.render(post.data.title)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nBlogHome.getInitialProps = async context => {\n  const home = await client.getSingle(\"blog_home\");\n\n  const posts = await client.query(\n    Prismic.Predicates.at(\"document.type\", \"blog_posts\"),\n    { orderings: \"[my.blog_post.date desc]\" }\n  );\n\n  return { home, posts };\n};\n\nexport default BlogHome;\n"]},"metadata":{},"sourceType":"module"}